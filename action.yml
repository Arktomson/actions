name: 'GitHub Actions Toolkit'
description: 'Collection of useful GitHub Actions for common development tasks'

branding:
  icon: 'zap'
  color: 'purple'

inputs:
  action:
    description: 'Which action to run (npm-publish, vscode-publish, docker-build, release-manager, code-quality, print-numbers)'
    required: true
  
  # NPM发布参数
  npm_token:
    description: '[NPM] NPM access token'
    required: false
  npm_version:
    description: '[NPM] Version to publish (patch, minor, major, or specific version)'
    required: false
    default: 'patch'
  npm_registry:
    description: '[NPM] NPM registry URL'
    required: false
    default: 'https://registry.npmjs.org/'
  
  # VS Code扩展参数
  vscode_pat:
    description: '[VSCode] Personal Access Token for VS Code Marketplace'
    required: false
  vscode_version:
    description: '[VSCode] Version to publish'
    required: false
  
  # Docker构建参数
  docker_image_name:
    description: '[Docker] Docker image name'
    required: false
  docker_tag:
    description: '[Docker] Docker image tag'
    required: false
    default: 'latest'
  docker_username:
    description: '[Docker] Docker registry username'
    required: false
  docker_password:
    description: '[Docker] Docker registry password'
    required: false
  
  # Release管理参数
  release_tag_name:
    description: '[Release] Tag name for release'
    required: false
  release_body:
    description: '[Release] Release body/notes'
    required: false
  
  # 测试用参数
  test_number:
    description: '[Test] Number to print from 1 to n'
    required: false
    default: '10'
  test_prefix:
    description: '[Test] Prefix for each number'
    required: false
    default: 'Number: '
  test_format:
    description: '[Test] Output format (list, json, csv)'
    required: false
    default: 'list'
  


runs:
  using: 'composite'
  steps:
    - name: Run NPM Publish
      if: inputs.action == 'npm-publish'
      uses: ./npm-publish
      with:
        token: ${{ inputs.npm_token }}
        version: ${{ inputs.npm_version }}
        registry: ${{ inputs.npm_registry }}
    
    - name: Run VS Code Publish
      if: inputs.action == 'vscode-publish'
      uses: ./vscode-marketplace-publish
      with:
        pat: ${{ inputs.vscode_pat }}
        version: ${{ inputs.vscode_version }}
    
    - name: Run Docker Build
      if: inputs.action == 'docker-build'
      uses: ./docker-build
      with:
        image_name: ${{ inputs.docker_image_name }}
        tag: ${{ inputs.docker_tag }}
        username: ${{ inputs.docker_username }}
        password: ${{ inputs.docker_password }}
    
    - name: Run Release Manager
      if: inputs.action == 'release-manager'
      uses: ./release-manager
      with:
        tag_name: ${{ inputs.release_tag_name }}
        body: ${{ inputs.release_body }}
    
    - name: Run Code Quality Check
      if: inputs.action == 'code-quality'
      uses: ./code-quality
      with:
        enable_lint: ${{ inputs.enable_lint }}
        enable_test: ${{ inputs.enable_test }}
    
    - name: Run Print Numbers Test
      if: inputs.action == 'print-numbers'
      uses: ./print-numbers
      with:
        number: ${{ inputs.test_number }}
        prefix: ${{ inputs.test_prefix }}
        format: ${{ inputs.test_format }}